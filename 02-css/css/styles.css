/*Regla CSS, consta de dos partes
1 el selector etiqueta, ides, clases, de clase, etc
2 bloque de declaracion  es cada uno de los atributos que vamos a modificar 
atributo:valor;
nombre-del-atributo : Valor; 
el bloque se define por {}
Por ejemplo: 

h1{
color:red;
bakcground-color:yellow;

el selector es h1
el bloque de dclaracion son todos los atributos y valores encerrados entre corchetes
en el ejemplo anteior los atributos son color y background-color, los valores son red y yellow

*/

/*es una mala practica utilizar el import 
las @import son bloqueantesm hasta que no carga toda esa hoja, no sigue cargando los archivos de la pagina
RETRASA LA CARGA 
*/
@import url(otrahojacss.css);
h1 {
  color: blue;
  background-color: aqua;
}

/*Selectores basicos
1 - etiquetas : Son elementos HTML
2 - Identificadores - Se accede atraves del atributo html con el simbolo # 
3 - clases - Se accede atraves del atributo HTML class, y en css con el simbolo del .

*/

p {
  color: midnightblue;
}

/*es una mala practica,se coincidera un antipatron */
#parrafo-2 {
  background-color: skyblue;
}

/* dar estilo con clases nos permite retuilizar nuestro codigo css */
.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.bg-skyblue {
  background-color: skyblue;
}
.bg-steelblue {
  background-color: steelblue;
}

.text-white {
  color: white;
}

/*aplicar estilos a hijos directos, se utiliza > */

.hijos-directos > li {
  background-color: thistle;
}

/*aplicar estilos a descendientes, se utiliza (espacio) */
.hijos-descendientes b {
  background-color: thistle;
}

/*los selectores de hermanos van a aplicar a los elementos que son hermanos y que esten por debajo del elemento de referencia */
.hermanos-general ~ li {
  background-color: thistle;
}

/*los selectores de hermanos adyacentes aplicaran estilo  a los hermanos, y solo a ellos, que estan de bajo del referencia*/

.hermanos-adyacentes + li {
  background-color: thistle;
}

/* Selectores de atributos */
.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/*el comodin *  aplica el estilo al atributo que contiene el texto en cuestion*/

.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/*el comodin *  aplica el estilo al atributo que comienza con el texto*/
.selectores-atributos a[href^="http://"]
{
  text-decoration: none;
}

/*el comodin *  aplica el estilo al atributo que finaliza con el texto*/
.selectores-atributos a[href$="hola"] {
  text-decoration: none;
}

/* va a buscar la palabra en class , el comodin es ~, en una lista separada por espacios en class */
.selectores-atributos a[class~="cursos"] {
  background-color: midnightblue;
}

/* va a buscar la palabra en class , el comodin es |, en una lista separada por espacios en class y que dpeues del texto en cuestion pueda venir un -  */
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/*--------------------------OTRA SECCION ----------------------------------- */

/*SELECTOR UNIVERSAL */
* {
  font-family: sans-serif;
}

.selector-universal * {
  font-size: 24px;
}
/*--------------------------OTRA SECCION ----------------------------------- */

/*---------------PSEUDOCLASES DE ESTADO-------------------------------- */
/*
Hay muchas psdeudoclses, aplican estilo a los elementos segun contexto, estado, etc
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes
*/

.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:focus {
  border-color: skyblue;
}

.prueba-hover:hover {
  color: green;
}

.pseudoclase-aumentar:hover {
  font-size: 20px;
}
